# M2_TAC-OTI
Module 'TAC - Outils de Tests d'Interfaces' du Master 2 e-services
Nicolas Vasseur - E-services FI

Tests JS sur le contrôle TP du module TAC - Web Avancé.

Rapport :

rapport retraçant les tests que vous avez écrit (notamment comment vous avez décidez de repartir les tests entre QUnit et Selenium),
les difficultés que vous avez rencontré pour la mise en place de tests,
éventuels améliorations apportées au code,
qu’en pensez-vous des apports de tests et! de leur mise en place

En QUnit sont écrits les tests orientés métier. Je teste les méthodes principales (ex: construction du tableau).
Une partie des tests (projetjs_test.js) se concentre sur la méthode qui permet de définir le type de la case (aléatoire entre 1 et 3) et la construction du tableau qui nécessite des paramètres.
Il est important que ces paramètres soient du bon type pour que la construction du tableau se fasse correctement.
L'autre partie des tests (cellule_test.js) vérifie le bon comportement des différents types de cellules (mis à part CelluleAvecPrompt), on veut voir si la CelluleAvecEntier s'incrémente bien et si la CelluleColoree se noircit bien au fur et à mesure qu'on clique dessus.
Avec SeleniumIDE, je teste directement l'interface dans le but de vérifier aussi le comportement de chaque cellule. Ca permet de voir si la gestion de l'évenement "click" est bien effectuée et que la case se modifie comme il faut.

Les principales difficultés pour les tests, ça était l'installation de Sonar...

J'ai amélioré le code en ajoutant dans le constructeur du tableau des conditions pour vérifier le type des paramètres, si celui-ci n'est pas correct, on renvoie une exception.

Les tests permettent de tester si le comportement de notre application est celle qu'on attend et aussi de voir si cela le reste au fur et à mesure du développement de celle-ci, dans le cas où on imagine une évolution de l'application.
